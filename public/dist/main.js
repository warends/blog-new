angular.module("willsBlog",["ngResource","ngAnimate","ngSanitize","ui.router"]),angular.module("willsBlog").config(["$locationProvider","$stateProvider","$urlRouterProvider",function(e,t,o){o.otherwise("/"),e.html5Mode(!0),t.state("home",{url:"/",templateUrl:"/partials/main/main",controller:"mainCtrl"}).state("account",{url:"/account",templateUrl:"/partials/login/login",controller:"loginCtrl"}).state("signup",{url:"/signup",templateUrl:"/partials/login/signup",controller:"signupCtrl"}).state("posts",{url:"/posts",templateUrl:"/partials/blog/blog-list",controller:"blogListCtrl"}).state("profile",{url:"/profile",templateUrl:"/partials/admin/profile",controller:"profileCtrl",resolve:{routeRoleCheck:["mvAuth",function(e){return e.authorizeAutheticatedUserForRoute()}]}}).state("postDetail",{url:"/posts/:slug",templateUrl:"/partials/blog/post-detail",controller:"postDetailCtrl"}).state("newPost",{url:"/admin/new-post",templateUrl:"/partials/blog/new-post",controller:"newPostCtrl",resolve:{routeRoleCheck:["mvAuth",function(e){return e.authorizeCurrentUserForRoute("admin")}]}}).state("editPost",{url:"/admin/:slug/edit",templateUrl:"/partials/blog/edit-post",controller:"editPostCtrl",resolve:{routeRoleCheck:["mvAuth",function(e){return e.authorizeCurrentUserForRoute("admin")}]}}).state("users",{url:"/admin/users",templateUrl:"/partials/admin/users-list",controller:"userListCtrl",resolve:{routeRoleCheck:["mvAuth",function(e){return e.authorizeCurrentUserForRoute("admin")}]}})}]),angular.module("willsBlog").run(["$rootScope","$location","$anchorScroll",function(e,t,o){o.yOffset=60,e.$on("$routeChangeError",function(e,o,n,r){"not authorized"===r&&t.path("/")})}]),angular.module("willsBlog").controller("profileCtrl",["$scope","mvAuth","identity","notifier",function(e,t,o,n){e.username=o.currentUser.username,e.fName=o.currentUser.firstName,e.lName=o.currentUser.lastName,e.update=function(){var o={username:e.username,firstName:e.fName,lastName:e.lName};e.password&&e.password.length>0&&(o.password=e.password),t.updateCurrentUser(o).then(function(){n.notify("Your information has been updated")},function(e){n.error(e)})}}]),angular.module("willsBlog").controller("userListCtrl",["$scope","mvUser",function(e,t){e.users=t.query()}]),angular.module("willsBlog").directive("globalModal",function(){return{restrict:"E",scope:{show:"="},replace:!0,transclude:!0,link:function(e,t,o){e.dialogStyle={},o.width&&(e.dialogStyle.width=o.width),o.height&&(e.dialogStyle.height=o.height),e.hideModal=function(){e.show=!1}},templateUrl:"/partials/common/modal"}}),angular.module("willsBlog").value("Toastr",toastr),angular.module("willsBlog").factory("notifier",["Toastr",function(e){return{notify:function(t){e.success(t),console.log(t)},error:function(t){e.error(t),console.log(t)}}}]),angular.module("willsBlog").factory("Meta",function(){var e="Web Development, Denver, CO",t="I enjoy all things web development and am always actively learning the newest techniques and langauges. If you have a web design or development project, give me a shout, I would love to talk about it.";return{title:function(){return e},setTitle:function(t){e=t},description:function(){return t},setDesc:function(e){t=e}}}).controller("metaCtrl",["$scope","Meta",function(e,t){e.Meta=t,e.metaDesc=t}]),angular.module("willsBlog").factory("TwitterService",["$http","$q",function(e,t){var o=function(o){var n=t.defer();return e.post("/twitter/user",{username:o}).success(function(e){return n.resolve(e)}).error(function(e){return n.reject(e)}),n.promise};return{getUser:o}}]),angular.module("willsBlog").controller("blogListCtrl",["$scope","mvCachedPost","identity","$location","Meta",function(e,t,o,n,r){window.scrollTo(0,0),r.setTitle("Blog"),e.posts=t.query(),e.identity=o,e.sortOptions=[{value:"title",text:"Sort by Title"},{value:"published",text:"Published Date"}],e.sortOrder=e.sortOptions[0].value}]),angular.module("willsBlog").controller("editPostCtrl",["$scope","notifier","mvPost","$q","$location","$stateParams",function(e,t,o,n,r,a){e.post=o.get({slug:a.slug}),e.post.data={_id:e.post._id,title:e.post.title,slug:e.post.slug,categories:e.post.categories,headerImage:e.post.headerImage,excerpt:e.post.excerpt,body:e.post.body,author:e.post.author},e.updatePost=function(){e.post.$update({slug:e.post.slug},function(){t.notify("Your post has been updated"),r.path("/blog")},function(e){t.error(e.data)})},e.deletePost=function(){e.post.$delete({slug:e.post.slug},function(){t.notify("Deleted from server"),r.path("/blog")})}}]),angular.module("willsBlog").factory("mvCachedPost",["mvPost",function(e){var t;return{query:function(){return t||(t=e.query()),t}}}]),angular.module("willsBlog").factory("mvPost",["$resource",function(e){return e("/api/posts/:slug",{slug:"@slug"},{update:{method:"PUT"}},{stripTrailingSlashes:!1})}]),angular.module("willsBlog").controller("newPostCtrl",["$scope","notifier","mvPost","$location",function(e,t,o,n){e.post=new o,e.createNewPost=function(){e.post.$save(function(){t.notify("New Post Created"),n.path("/blog")})},e.cancel=function(){n.path("/blog")}}]),angular.module("willsBlog").controller("postDetailCtrl",["$scope","mvCachedPost","mvPost","$stateParams","Meta",function(e,t,o,n,r){window.scrollTo(0,0),e.post=o.get({slug:n.slug},function(){var t=e.post.title,o=e.post.excerpt;r.setTitle(t),r.setDesc(o)})}]),angular.module("willsBlog").factory("identity",["$window","mvUser",function(e,t){var o;return e.bootstrappedUserObject&&(o=new t,angular.extend(o,e.bootstrappedUserObject)),{currentUser:o,isAuthenticated:function(){return!!this.currentUser},isAuthorized:function(e){return!!this.currentUser&&this.currentUser.roles.indexOf(e)>-1}}}]),angular.module("willsBlog").controller("loginCtrl",["$scope","$http","identity","notifier","mvAuth","$location","Meta",function(e,t,o,n,r,a,s){window.scrollTo(0,0),s.setTitle("Account"),e.identity=o,e.signIn=function(t,o){r.authenticateUser(t,o).then(function(t){t?(n.notify("You have signed in"),a.url("/account"),e.actShown=!1):n.notify("Username/Password Incorrect")})},e.signOut=function(){r.logoutUser().then(function(){e.username="",e.password="",n.notify("You have logged out"),a.path("/")})},e.signup=function(){var t={username:e.username,firstName:e.fName,lastName:e.lName,password:e.password};r.createUser(t).then(function(){n.notify("User account created"),a.path("/")},function(e){n.error(e)})},e.cancel=function(){a.path("/")},e.actShown=!1,e.toggleAccount=function(){o.isAuthenticated()?a.path("/account"):e.actShown=!e.actShown},e.signupShown=!1,e.toggleSignup=function(){e.signupShown=!e.signupShown}}]),angular.module("willsBlog").factory("mvAuth",["$http","identity","$q","mvUser",function(e,t,o,n){return{authenticateUser:function(r,a){var s=o.defer();return e.post("/login",{username:r,password:a}).then(function(e){if(e.data.success){var o=new n;angular.extend(o,e.data.user),t.currentUser=o,s.resolve(!0)}else s.resolve(!1)}),s.promise},logoutUser:function(){var n=o.defer();return e.post("/logout",{logout:!0}).then(function(){t.currentUser=void 0,n.resolve()}),n.promise},authorizeCurrentUserForRoute:function(e){return!!t.isAuthorized("admin")||o.reject("not authorized")},authorizeAutheticatedUserForRoute:function(){return!!t.isAuthenticated()||o.reject("not a current user")},createUser:function(e){var r=new n(e),a=o.defer();return r.$save().then(function(){t.currentUser=r,a.resolve()},function(e){a.reject(e.data.reason)}),a.promise},updateCurrentUser:function(e){var n=o.defer(),r=angular.copy(t.currentUser);return angular.extend(r,e),r.$update().then(function(){t.currentUser=r,n.resolve()},function(e){n.reject(e.data.reason)}),n.promise}}}]),angular.module("willsBlog").factory("mvUser",["$resource",function(e){var t=e("/api/users/:id",{_id:"@id"},{update:{method:"PUT",isArray:!1}});return t.prototype.isAdmin=function(){return this.roles&&this.roles.indexOf("admin")>-1},t}]),angular.module("willsBlog").controller("signupCtrl",["$scope","mvAuth","notifier","$location",function(e,t,o,n){e.signup=function(){var r={username:e.username,firstName:e.fName,lastName:e.lName,password:e.password};t.createUser(r).then(function(){o.notify("User account created"),n.path("/")},function(e){o.error(e)})},e.cancel=function(){n.path("/")}}]),angular.module("willsBlog").controller("carouselCtrl",["$scope",function(e){e.slides=[{name:"Mobile",svg:"mobile-svg",desc:"Is your website up to date with the most current mobile design trends? If not, you are loosing valuable business. Ensure that your customers can reach your business from anywhere and receive the best user experience. By building with responsive design in mind, your customers will get a pixel perfect look from mobile to tablet or desktop."},{name:"ECommerce",svg:"ecomm-svg",desc:"Do you have a new product you are looking to bring to market and need an e-commerce site or just looking for more modern feel to an existing site?  By utilizing robust ecommerce platforms, we can design and develop a site that will scale with your business and needs all in time to meet your busy deadlines. "},{name:"SEO",svg:"seo-svg",desc:"Having a modern design and user friendly website is great, but if customers can`t find your business, it wont matter much.  We design and develop every aspect of the website with search engine optimization in mind and so your customers can find you among the competition.  Also through research and analytics we can develop, plan and deploy the best SEO and marketing practices to increase conversions and retention."}],e.currentIndex=0,e.setCurrentSlideIndex=function(t){e.currentIndex=t},e.isCurrentSlideIndex=function(t){return e.currentIndex===t}}]).animation(".slide-animation",function(){return{addClass:function(e,t,o){"ng-hide"==t?TweenMax.to(e,.5,{left:-e.parent().width(),onComplete:o}):o()},removeClass:function(e,t,o){"ng-hide"==t?(e.removeClass("ng-hide"),TweenMax.set(e,{left:e.parent().width()}),TweenMax.to(e,.5,{left:0,onComplete:o})):o()}}}),angular.module("willsBlog").controller("mainCtrl",["$scope","$location","mvCachedPost","notifier","TwitterService","$http","Meta",function(e,t,o,n,r,a,s){s.setTitle("Home"),s.setDesc("I enjoy all things web development and am always actively learning the newest techniques and langauges. If you have a web design or development project, give me a shout, I would love to talk about it."),e.services=[{name:"Development",svg:"dev-logo",description:"Customized and reusable code using the most up to date HTML5, CSS3 and Javascript framworks. Options range from static sites, content managed sites, and ecommerce stores.",more:"Development Skills include HTML5, CSS, Javascript, Angular, Backbone, Node, Express, Boostrap and more."},{name:"Web Design",svg:"design-logo",description:"Creating an excellent user experience through clean, simple and thoroughly crafted design. Collaboration with clients during design process ensures a superb finished project.",more:"Services include wire frames, photoshop mockups, logo design, and company branding."},{name:"Support",svg:"sup-logo",description:"Support is readily available for clients when anything comes up along the development process. Also available are personal instruction on how to maintain or update your own site.",more:"Have a new product or feature you want to implement? Plans for continued support and maintenance are available."}],e.posts=o.query(),e.form={},e.sendMail=function(){var t={contactName:this.contactName,contactCompany:this.contactCompany,contactEmail:this.contactEmail,contactMessage:this.contactMessage};a.post("/contact-form",t).success(function(t,o,r,a){n.notify("Thank you for your message "+t.contactName),e.form.contactForm.$setPristine(),e.form.contactForm.$setUntouched()}).error(function(e,t,o,r){n.notify("There was an error processing your request. Please try again")}),this.contactName=null,this.contactCompany=null,this.contactEmail=null,this.contactMessage=null},e.getUser=function(t){r.getUser(t).then(function(t){e.twitterErrors=void 0,e.tweets=JSON.parse(t.result.userData)}).catch(function(t){console.error("there was an error retrieving data: ",t),e.twitterErrors=t.error})}}]),angular.module("willsBlog").controller("navCtrl",["$scope","$location","$anchorScroll",function(e,t,o){e.linkTo=function(e){t.url(e),o()}}]),angular.module("willsBlog").controller("workCtrl",["$scope",function(e){e.tendrilShown=!1,e.toggleTendril=function(){e.tendrilShown=!e.tendrilShown},e.crownShow=!1,e.toggleCrown=function(){e.crownShow=!e.crownShow},e.broadShow=!1,e.toggleBroad=function(){e.broadShow=!e.broadShow},e.adihow=!1,e.toggleAdi=function(){e.adiShow=!e.adiShow}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
